{"mappings":"qhBAEA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAeC,SAASC,cAAc,kBACtCC,EAAYF,SAASC,cAAc,SACnCE,EAAcH,SAASI,iBAAiB,SAC9C,IAAIC,EAAc,GACdC,EAAU,CAAEC,WAAY,EAAGC,UAAW,GAM1C,SAASC,EAAiBC,GACxBX,EAAaY,SAAWD,C,CAiC1B,SAASE,EAAcC,GACrB,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,CAAEM,SAAAR,IAEVG,EAAO,CAAEK,SAAAR,GAAW,GAErBR,EAAYiB,KAAK,IACnBC,MAAK,EAACF,SAAEA,MACTG,QAAQC,IAAI,uBAAqBJ,KACjCK,EAAA7B,GAAS8B,OAAOC,QAAQ,qBAAqBP,QAAehB,EAAYiB,SAAS,IAChFO,OAAM,EAACR,SAAEA,MACVG,QAAQC,IAAI,sBAAoBJ,KAChCK,EAAA7B,GAAS8B,OAAOG,QAAQ,oBAAoBT,QAAehB,EAAYiB,SAAS,G,CAkBpFvB,EAAagC,iBAAiB,SA/D9BC,eAA8BC,GAC5BA,EAAMC,iBARN/B,EAAYgC,SAAQC,GAAS/B,EAAY+B,EAAKC,aAAa,SAAWD,EAAK1B,QAyD3E4B,aAAahC,EAAQC,YACrB+B,aAAahC,EAAQE,WA/CrBC,GAAiB,GACjB,MAAM8B,EAASlC,EAAYkC,QAAU,EAErC,IAAK,IAAIC,EAAM,EAAGA,GAAOD,EAAQC,GAAO,EACtC,UACQ5B,EAAc4B,E,CACpB,MAAOC,GACPjB,QAAQiB,MAAMA,E,CAIlBhC,GAAiB,E,IAiDnBP,EAAU6B,iBAAiB,SAV3B,WACE,IAAK,MAAMW,KAAWvC,EACpB,GAAIuC,EAAQhC,MAAQ,GAAuB,KAAlBgC,EAAQhC,MAC/B,OAAOD,GAAiB,GAG5BA,GAAiB,E,IAMnBA,GAAiB","sources":["src/js/03-promises.js"],"sourcesContent":["\n\nimport Notiflix from 'notiflix';\n\nconst resultButton = document.querySelector('.form > button');\nconst delayForm = document.querySelector('.form');\nconst delayFields = document.querySelectorAll('input');\nlet delayObject = {};\nlet timerId = { intervalId: 0, timeoutId: 0 };\n\nfunction getDelayObject() {\n  delayFields.forEach(elem => (delayObject[elem.getAttribute('name')] = elem.value));\n}\n\nfunction resultBtnIsBlock(value) {\n  resultButton.disabled = value;\n}\n\nasync function mainController(event) {\n  event.preventDefault();\n  getDelayObject();\n  cleaningTimer();\n  resultBtnIsBlock(true);\n  const amount = delayObject.amount || 1;\n  \n  for (let pos = 1; pos <= amount; pos += 1) {\n    try {\n      await createPromise(pos);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  resultBtnIsBlock(false);\n}\n\nfunction startTimeout() {\n  timerId.timeoutId = setTimeout(() => {\n    startInterval();\n  }, delayObject.delay);\n}\n\nfunction startInterval() {\n  timerId.intervalId = setInterval(() => {\n    createPromise();\n  }, delayObject.step);\n}\n\nfunction createPromise(position) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position });\n      } else {\n        reject({ position });\n      }\n    }, delayObject.step);\n  }).then(({ position }) => {\n    console.log(`✅ Fulfilled promise ${position}`);\n    Notiflix.Notify.success(`Fulfilled promise ${position} in ${delayObject.step}ms`);\n  }).catch(({ position }) => {\n    console.log(`❌ Rejected promise ${position}`);\n    Notiflix.Notify.failure(`Rejected promise ${position} in ${delayObject.step}ms`);\n  });\n}\n\nfunction cleaningTimer() {\n  clearTimeout(timerId.intervalId);\n  clearTimeout(timerId.timeoutId);\n}\n\nfunction changeController() {\n  for (const element of delayFields) {\n    if (element.value < 0 || element.value === '') {\n      return resultBtnIsBlock(true);\n    }\n  }\n  resultBtnIsBlock(false);\n}\n\nresultButton.addEventListener('click', mainController);\ndelayForm.addEventListener('input', changeController);\n\nresultBtnIsBlock(true);\n\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$resultButton","document","querySelector","$47d4ff9957288465$var$delayForm","$47d4ff9957288465$var$delayFields","querySelectorAll","$47d4ff9957288465$var$delayObject","$47d4ff9957288465$var$timerId","intervalId","timeoutId","$47d4ff9957288465$var$resultBtnIsBlock","value","disabled","$47d4ff9957288465$var$createPromise","position1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","step","then","console","log","$parcel$interopDefault","Notify","success","catch","failure","addEventListener","async","event","preventDefault","forEach","elem","getAttribute","clearTimeout","amount","pos","error","element"],"version":3,"file":"03-promises.76354319.js.map"}