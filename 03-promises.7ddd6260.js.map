{"mappings":"qhBAEA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAeC,SAASC,cAAc,kBACtCC,EAAYF,SAASC,cAAc,SACnCE,EAAcH,SAASI,iBAAiB,SACxCC,EAAc,GACpB,IAAIC,EAAe,EACnB,MAAMC,EAAU,CAAEC,WAAY,EAAGC,UAAW,GAQtCC,EAA0BC,GAAUZ,EAAaa,SAAWD,EAWlE,MAAME,EAAe,KACnBN,EAAQE,UAAYK,YAAW,KAC7BC,IACAC,IACAN,GAAwB,EAAM,GAC7BL,EAAYY,MAAM,EAGjBD,EAAgB,KACpBT,EAAQC,WAAaU,aAAY,KAC/BH,GAAe,GACdV,EAAYc,KAAK,EAGhBJ,EAAgB,KAEpB,GADAT,IACIA,GAAgBD,EAAYe,OAAQ,CAChBC,KAAKC,SAAW,IAEpCC,QAAQC,IAAI,MACZC,EAAA5B,GAAS6B,OAAOC,QACd,qBAAqBrB,QAAmBD,EAAYc,YAGtDI,QAAQC,IAAI,UACZC,EAAA5B,GAAS6B,OAAOE,QACd,oBAAoBtB,QAAmBD,EAAYc,U,MAIvDU,GAAa,EAIXA,EAAc,KAClBC,aAAavB,EAAQC,YACrBuB,cAAcxB,EAAQE,UAAU,EAYlCV,EAAaiC,iBAAiB,SAzD9B,SAAwBC,GACtBA,EAAMC,iBARN/B,EAAYgC,SACVC,GAAY/B,EAAY+B,EAAQC,aAAa,SAAWD,EAAQzB,QASlEL,EAAe,EACfuB,IACAhB,IACAH,GAAwB,E,IAoD1BR,EAAU8B,iBAAiB,UAV3B,WACE,IAAK,MAAMI,KAAWjC,EACpB,GAAIiC,EAAQzB,MAAQ,GAAuB,KAAlByB,EAAQzB,MAC/B,OAAOD,GAAwB,GAGnC,OAAOA,GAAwB,E,IAMjCA,GAAwB","sources":["src/js/03-promises.js"],"sourcesContent":["\n\nimport Notiflix from 'notiflix';\n\nconst resultButton = document.querySelector('.form > button');\nconst delayForm = document.querySelector('.form');\nconst delayFields = document.querySelectorAll('input');\nconst delayObject = {};\nlet amountRepeat = 0;\nconst timerId = { intervalId: 0, timeoutId: 0 };\n\nconst getDelayObject = () => {\n  delayFields.forEach(\n    element => (delayObject[element.getAttribute('name')] = element.value)\n  );\n};\n\nconst setResultButtonDisabled = value => (resultButton.disabled = value);\n\nfunction mainController(event) {\n  event.preventDefault();\n  getDelayObject();\n  amountRepeat = 0;\n  clearTimers();\n  startTimeout();\n  setResultButtonDisabled(true); // Disable the button immediately\n}\n\nconst startTimeout = () => {\n  timerId.timeoutId = setTimeout(() => {\n    createPromise();\n    startInterval();\n    setResultButtonDisabled(false); // Enable the button after the promises are started\n  }, delayObject.delay);\n};\n\nconst startInterval = () => {\n  timerId.intervalId = setInterval(() => {\n    createPromise();\n  }, delayObject.step);\n};\n\nconst createPromise = () => {\n  amountRepeat++;\n  if (amountRepeat <= delayObject.amount) {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      console.log('ok');\n      Notiflix.Notify.success(\n        `Fulfilled promise ${amountRepeat} in ${delayObject.step}ms`\n      );\n    } else {\n      console.log('not ok');\n      Notiflix.Notify.failure(\n        `Rejected promise ${amountRepeat} in ${delayObject.step}ms`\n      );\n    }\n  } else {\n    clearTimers();\n  }\n};\n\nconst clearTimers = () => {\n  clearTimeout(timerId.intervalId);\n  clearInterval(timerId.timeoutId);\n};\n\nfunction changeController() {\n  for (const element of delayFields) {\n    if (element.value < 0 || element.value === '') {\n      return setResultButtonDisabled(true);\n    }\n  }\n  return setResultButtonDisabled(false);\n}\n\nresultButton.addEventListener('click', mainController);\ndelayForm.addEventListener('change', changeController);\n\nsetResultButtonDisabled(true);\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$resultButton","document","querySelector","$47d4ff9957288465$var$delayForm","$47d4ff9957288465$var$delayFields","querySelectorAll","$47d4ff9957288465$var$delayObject","$47d4ff9957288465$var$amountRepeat","$47d4ff9957288465$var$timerId","intervalId","timeoutId","$47d4ff9957288465$var$setResultButtonDisabled","value","disabled","$47d4ff9957288465$var$startTimeout","setTimeout","$47d4ff9957288465$var$createPromise","$47d4ff9957288465$var$startInterval","delay","setInterval","step","amount","Math","random","console","log","$parcel$interopDefault","Notify","success","failure","$47d4ff9957288465$var$clearTimers","clearTimeout","clearInterval","addEventListener","event","preventDefault","forEach","element","getAttribute"],"version":3,"file":"03-promises.7ddd6260.js.map"}